{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/pattern.ts","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","hasImgUrl","hasImdbUrl","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","validationIsError","htmlFor","type","classNames","event","target","onBlur","pattern","NewMovie","onAdd","count","setCount","trim","state","setState","setHasImgUrl","setHasImdbUrl","conditionForButton","onSubmit","preventDefault","test","prev","disabled","App","moviesFromServer","setMovies","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd124fba.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  hasImgUrl?: string,\n  hasImdbUrl?: string,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  hasImgUrl,\n  hasImdbUrl,\n  onChange = () => { },\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n\n  const hasError = touched && required && !value;\n\n  const validationIsError = hasImgUrl || hasImdbUrl;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || hasImgUrl || hasImdbUrl,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {(validationIsError) && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      )}\n    </div>\n  );\n};\n","// eslint-disable-next-line max-len\nexport const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n","/* eslint-disable padding-line-between-statements */\nimport React, { useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\nimport { pattern } from './pattern';\n\ntype Props = {\n  onAdd: (value: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n\n  const [state, setState] = useState({\n    title: ''.trim(),\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const [hasImgUrl, setHasImgUrl] = useState('');\n  const [hasImdbUrl, setHasImdbUrl] = useState('');\n\n  const conditionForButton = !state.title\n    || !state.imgUrl\n    || !state.imdbUrl\n    || !state.imdbId;\n\n  function reset() {\n    setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n    setHasImdbUrl('');\n    setHasImgUrl('');\n  }\n\n  function handleReset(event: React.FormEvent) {\n    event.preventDefault();\n\n    if (!pattern.test(state.imgUrl) && !pattern.test(state.imdbUrl)) {\n      setHasImgUrl('error');\n      setHasImdbUrl('error');\n      return;\n    }\n\n    if (!pattern.test(state.imgUrl)) {\n      setHasImgUrl('error');\n      return;\n    }\n\n    if (!pattern.test(state.imdbUrl)) {\n      setHasImdbUrl('error');\n      return;\n    }\n\n    onAdd(state);\n    setCount((prev) => prev + 1);\n\n    reset();\n  }\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleReset}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={state.title}\n        onChange={value => setState({ ...state, title: value })}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={state.description}\n        onChange={value => setState({ ...state, description: value })}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={state.imgUrl}\n        hasImgUrl={hasImgUrl}\n        onChange={value => {\n          setState({ ...state, imgUrl: value });\n          setHasImgUrl('');\n        }}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={state.imdbUrl}\n        hasImdbUrl={hasImdbUrl}\n        onChange={value => {\n          setState({ ...state, imdbUrl: value });\n          setHasImdbUrl('');\n        }}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={state.imdbId}\n        onChange={value => setState({ ...state, imdbId: value })}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={conditionForButton}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={(newMovie) => {\n          setMovies(([...movies, newMovie]));\n        }}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}